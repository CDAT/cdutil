version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh
        
aliases:

  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      ls workspace/cdat
      # following will install miniconda3 under $WORKDIR/miniconda/bin
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'
      
  - &create_conda_env
    name: create_conda_env
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       conda config --set always_yes yes --set changeps1 no
       conda update -y -q conda
       conda config --set anaconda_upload no
       conda create -n py3 -c nesii/label/dev-esmf -c cdat/label/nightly -c conda-forge genutil nose flake8 "numpy=1.13" "python>3"
       conda create -n py2 -c nesii/label/dev-esmf -c cdat/label/nightly -c conda-forge genutil nose flake8 "numpy=1.13" "python<3"

  - &setup_cdutil
    name: setup_cdutil
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       source activate py3
       python setup.py install
       source activate py2
       rm -rf build
       python setup.py install

  - &run_cdutil_tests
    name: run_cdutil_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       set -e
       source activate py2
       python run_tests.py -v2 
       PY2_RESULT=$?
       echo "*** py2 test result: "${PY2_RESULT}
       source activate py3
       python run_tests.py -v2 
       PY3_RESULT=$?
       echo "*** py3 test result: "${PY3_RESULT}
       if [ $PY2_RESULT -eq 0 -a $PY3_RESULT -eq 0 -a $CIRCLE_BRANCH == "master" ]; then bash ./ci-support/conda_upload.sh ; fi
       if [ $PY2_RESULT	-ne 0 -o $PY3_RESULT -ne 0]; then
         exit 1
       fi
jobs:
  macos_cdutil:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_cdutil"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *create_conda_env
      - run: *setup_cdutil
      - run: *run_cdutil_tests
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png


workflows:
  version: 2
  nightly:
    jobs:
      - macos_cdutil

       