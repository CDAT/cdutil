version: 2

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
       mkdir -p workspace
       git clone -b validateNightlyNew git@github.com:CDAT/cdat workspace/cdat
       # install_miniconda.py installs miniconda3 under $WORKDIR/miniconda
       python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &conda_rerender
    name: conda_rerender
    command: |
       git clone https://github.com/CDAT/conda-recipes.git $WORKDIR/conda-recipes 
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -l $LAST_STABLE -B 0 -p $PKG_NAME -b $CIRCLE_BRANCH --do_rerender

  - &conda_build
    name: conda_build
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda config --add channels conda-forge --force
       conda config --add channels cdat/label/nightly --force
       conda config --set channel_priority strict
       BUILD_SCRIPT="$WORKDIR/conda-recipes/build_tools/conda_build.py"
       python $BUILD_SCRIPT -w $WORKDIR -p $PKG_NAME --build_version $BUILD_VARIANT_VER --do_build

  - &setup_run_tests
    name: setup_run_tests
    environment:
       PKGS: "genutil numpy cdat_info testsrunner"
       CHANNELS: "-c cdat/label/nightly -c conda-forge"
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       conda create -y -n $ENV_NAME --use-local $CHANNELS "$CONDA_PY_VER" $PKG_NAME $PKGS $COVERAGE_PKGS
       conda activate $ENV_NAME
       conda list

  - &run_tests
    name: run_tests
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       python run_tests.py -H -v2 -n 2 $COVERAGE
       conda deactivate

  - &conda_upload
    name: conda_upload
    command: |
       if [[ $CIRCLE_BRANCH != "master" ]]; then
          exit 0
       fi
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate base
       UPLOAD_OPTIONS="-t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL"
       anaconda $UPLOAD_OPTIONS $WORKDIR/miniconda/conda-bld/noarch/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

  - &run_coveralls
    name: run_coveralls
    command: |
       source $WORKDIR/miniconda/etc/profile.d/conda.sh
       conda activate $ENV_NAME
       coveralls
       conda deactivate

jobs:
   macos_setup:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths: 
                 - macos_build

   linux_setup:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         LAST_STABLE: "8.2"
         BUILD_VARIANT_VER: "noarch"
      steps:
         - checkout
         - run: *setup_miniconda
         - run: *conda_rerender
         - run: *conda_build
         - persist_to_workspace:
              root: .
              paths:
                 - linux_build

   macos_cdutil_py36:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         ENV_NAME: "test_cdutil"
         CONDA_PY_VER: "python>=3.6,<3.7"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html

   macos_cdutil_py37:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         ENV_NAME: "test_cdutil"
         CONDA_PY_VER: "python>=3.7,<3.8"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html

   macos_cdutil_py38:
      macos:
         xcode: "11.4.0"
      environment:
         WORKDIR: /Users/distiller/project/macos_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         ENV_NAME: "test_cdutil"
         CONDA_PY_VER: "python>=3.8,<3.9"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html

   linux_cdutil_py36:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         ENV_NAME: "test_cdutil"
         CONDA_PY_VER: "python>=3.6,<3.7"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html

   linux_cdutil_py37:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         ENV_NAME: "test_cdutil"
         CONDA_PY_VER: "python>=3.7,<3.8"
         COVERAGE: "-c tests/coverage.json --coverage-from-egg"
         COVERAGE_PKGS: "coverage coveralls"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *run_tests
         - run: *run_coveralls
         - store_artifacts:
              path: tests_html
              destination: tests_html

   linux_cdutil_py38:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "cdutil"
         REPO_NAME: "cdutil"
         ENV_NAME: "test_cdutil"
         CONDA_PY_VER: "python>=3.8,<3.9"
      steps:
         - checkout
         - attach_workspace:
              at: .
         - run: *setup_run_tests
         - run: *run_tests
         - store_artifacts:
              path: tests_html
              destination: tests_html

   upload:
      machine:
         image: circleci/classic:latest
      environment:
         WORKDIR: /home/circleci/project/linux_build
         PKG_NAME: "cdutil"
         VERSION: "8.2"
         USER: "cdat"
         LABEL: "nightly"
      steps:
         - attach_workspace:
              at: .
         - run: pwd
         - run: *conda_upload

workflows:
   version: 2
   cdutil:
      jobs:
         - macos_setup
         - linux_setup
         - macos_cdutil_py36:
              requires:
                 - macos_setup
         - macos_cdutil_py37:
              requires:
                 - macos_setup
         - macos_cdutil_py38:
              requires:
                 - macos_setup
         - linux_cdutil_py36:
              requires:
                 - linux_setup
         - linux_cdutil_py37:
              requires:
                 - linux_setup
         - linux_cdutil_py38:
              requires:
                 - linux_setup
         - upload:
              requires:
                 - macos_cdutil_py36
                 - macos_cdutil_py37
                 - macos_cdutil_py38
                 - linux_cdutil_py36
                 - linux_cdutil_py37
                 - linux_cdutil_py38
